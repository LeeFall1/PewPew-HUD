{"slots":{"0":{"name":"shield","type":{"events":[],"methods":[]}},"1":{"name":"radar_1","type":{"events":[],"methods":[]}},"2":{"name":"slot3","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-2":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"unit.setTimer(\"sound\")\n\n","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"absorbed(hitpoints,rawHitpoints)","slotKey":"0"},"key":"0"},{"code":"_autoconf = {}\n_autoconf.panels = {}\n_autoconf.panels_size = 0\n_autoconf.displayCategoryPanel = function(elements, size, title, type, widgetPerData)\n    widgetPerData = widgetPerData or false -- default to one widget for all data\n    if size > 0 then\n        local panel = system.createWidgetPanel(title)\n        local widget\n        if not widgetPerData then\n            widget = system.createWidget(panel, type)\n        end\n        for i = 1, size do\n            if widgetPerData then\n                widget = system.createWidget(panel, type)\n            end\n            system.addDataToWidget(elements[i].getDataId(), widget)\n        end\n        _autoconf.panels_size = _autoconf.panels_size + 1\n        _autoconf.panels[_autoconf.panels_size] = panel\n    end\nend\n_autoconf.hideCategoryPanels = function()\n    for i=1,_autoconf.panels_size do\n        system.destroyWidgetPanel(_autoconf.panels[i])\n    end\nend\n-- Proxy array to access auto-plugged slots programmatically\nradar = {}\nradar[1] = radar_1\nradar_size = 1\n\nif shield ~= nil then shield.show() end\n\n\n_autoconf.displayCategoryPanel(radar, radar_size, \"Radar\", \"radar\")","filter":{"args":[],"signature":"start()","slotKey":"-1"},"key":"1"},{"code":"local function play(sound, ID, type)\n        if (type == nil and not voices) or (type ~= nil and not alerts) or soundFolder == \"archHUD\" or not sounds then return end\n        if type ~= nil then\n            if type == 2 then\n                system.logInfo(\"sound_loop|audiopacks/\"..soundFolder..\"/\"..sound..\"|\"..ID..\"|\"..soundVolume)\n            else\n                system.logInfo(\"sound_notification|audiopacks/\"..soundFolder..\"/\"..sound..\"|\"..ID..\"|\"..soundVolume)\n            end\n        else\n            system.logInfo(\"sound_q|audiopacks/\"..soundFolder..\"/\"..sound..\"|\"..ID..\"|\"..soundVolume)\n        end\n    end\n\nplay(\"ShieldRoid\", \"ShieldRoid\")\nunit.stopTimer(\"sound\")","filter":{"args":[{"value":"sound"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"2"}],"methods":[],"events":[]}
